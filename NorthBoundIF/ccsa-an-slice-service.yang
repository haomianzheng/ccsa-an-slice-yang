module ccsa-an-slice-service {
  namespace "urn:ccsa:yang:ccsa-an-slice-service";
  prefix an-service;

  import ietf-inet-types {
    prefix inet;
  }

  import ietf-yang-types {
    prefix yang;
  }

  import bbf-dot1q-types {
    prefix bbf-dot1qt;
  }

  import ccsa-an-slice-pub-type {
    prefix an-slice-type;
  }

  organization
    "CCSA TC6WG2. ";

  description
    "The model is defined for Access Network service slicing.";

  revision 2023-08-17 {
    description
      "Initial revision.";

  }

  identity isolation-type {
    description
      "Base identity from which specific isolation types are derived.";
  }

  identity physical-isolation {
    base isolation-type;
    description
      "Physical isolation.";
  }

  identity logical-isolation {
    base isolation-type;
    description
      "Logical isolation.";
  }

  typedef ip-address-or-prefix {
    type union {
      type inet:ip-address;
      type inet:ip-prefix;
    }

    description
      "The ip-address-or-prefix type represent either an IP address or an IP prefix.";
  }

  grouping traffic-grouping {
    description
      "Network traffic.";

    leaf fixed-bandwidth {
      type uint64;
      units bit/s;
      description
        "Link capacity that is allocated to the given traffic flow.";
    }
  }

  grouping auth-grouping {
    description
      "Authentication.";

    leaf user-name {
      type an-slice-type:username;

      description
        "Authentication user name.";
    }

    leaf password {
      type an-slice-type:password;

      description
        "Authentication password.";
    }
  }

  grouping sla-grouping {
    description
      "Service Level Agreement (SLA) of the APAN slicing.";

    container upstream {
      description
        "Configure upstream Service Level Agreement (SLA).";

      uses traffic-grouping;
    }

    container downstream {
      description
        "Configure downstream Service Level Agreement (SLA).";

      uses traffic-grouping;
    }

    leaf max-latency {
      type uint32 {
        range "0..16777215";
      }
      units us;
      description
        "Maximum latency in microseconds.";
    }

    leaf max-jitter {
      type uint32 {
        range "0..16777215";
      }
      units us;
      description
        "The variation in packet delay is called jitter.
         Packet delay variation (PDV) is measured by the difference
         in the one-way delay between sequential packets in a flow.
         jitter quantified in units of microseconds.";
    }

    leaf max-loss {
      type decimal64 {
        fraction-digits 6;
        range "0 .. 50.331642";
      }
      units %;
      description
        "Packet loss as a percentage of the total traffic sent
         over a configurable interval. The finest precision is
         0.000003%. where the maximum 50.331642%.";
      reference
        "RFC 7810, section-4.4";
    }
  }

  grouping vlan-grouping {
    description
      "VLAN.";

    leaf outer-vlan {
      type bbf-dot1qt:vlan-id;
      description
        "Outer VLAN.";
    }

    leaf inner-vlan {
      type bbf-dot1qt:vlan-id;
      description
        "Inner VLAN.";
    }
  }

  container slice-service {
    description
      "For the management of service slice instances.";

    container slats {
      description
        "List of Service Level Agreement (SLA) templates.";

      list slat { 
        key "template-name";
        description
          "Configure Service Level Agreement (SLA) template.";

        leaf template-name {
          type string {
            length 1..32;
          }

          description
            "Service Level Agreement (SLA) templates name.";
        }

        uses sla-grouping;
      }
    }

    container nsts {
      description
        "List of Network Slicing Templates (NST).";

      list nst {
        key "name";
        description
          "Configure Network Slicing Templates (NST).";

        leaf name {
          type string {
            length 1..32;
          }

          description
            "Network slicing template name.";
        }

        leaf sla-template-name {
          type leafref {
            path "/slice-service/slats/slat/template-name";
          }

          description
            "Bind a Service Level Agreement (SLA) Template by name.";
        }

        leaf isolation-type {
          type identityref {
            base isolation-type;
          }
          description
            "The service isolation level.";
        }

        list app-type {
            key "main-type sub-type";
            leaf main-type{
                 type string {
                    length 1..32;          
                }
                   description
                    "The APP service main type name. Enumerated value: APP-ALL/APP-OTT-VIDEO/APP-GAME/APP-EDUCATION/APP-OFFICE/APP-SELF-OPER-VIDEO/APP-SHORT-VIDEO  ";     
            }  
            leaf sub-type{
                 type string {
                    length 1..32;          
                }
                   description
                    "The APP service sub type name.  For Example:  TENCENT-VIDEO/VIP-KID/HONOR-OF-KINGS/...";     
            }                 
         }
 
      }
    }

    container nsis {
      description
        "List of Network Service Slicing Instance (NSI).";

      list nsi {
        key "nst-name";

        description
          "Configure network slice instance.";

        leaf nst-name {
          type leafref {
            path "/slice-service/nsts/nst/name";
          }

          description
            "Network slice template name.";
        }

        container olts {
          description
            "List of olt.";

          list olt {
            key "olt-res-id";
            description
            "Configure olt for network slicing instance.";

            leaf olt-res-id {
              type yang:uuid;
              description
                "Olt neid.";
            }

            container nni-ports {
              description
                "List of network point ports.";

              list nni-port {
                key "ltp-slice-res-id";
                description
                  "Indicates the unique ID of the ltp slice.";

                uses an-slice-type:ltp-slice-single;
              }
            }

            container uni-ports {
              description
                "List of UNI ports.";

              list uni-port {
                
               key "ltp-slice-res-id";
               description
                "Indicates the unique ID of the ltp slice.";    

                uses  an-slice-type:ltp-slice-single;
              }
            }
          }
        }

        container onts {
          description
                   "List of ont.";

          list ont {
            key "onu-res-id";
            description
               "Configure ont network slicing instance.";

            leaf onu-res-id {
              type string {
                length 1..36;
                pattern '[0-9a-z]{8}-[0-9a-z]{4}-[0-9a-z]{4}-[0-9a-z]{4}-[0-9a-z]{12}';
              }
              description
                "Indicates the unique ID of the ONU. The type is UUID..";
         
            }

            leaf wan-auth-type{
                type  an-slice-type:wan-auth-type;    
                description
                    "The auth type for the WAN port, include IPoE/PPPoE/... .";        
            }
        
          }
        }
      }
    }
  }
}